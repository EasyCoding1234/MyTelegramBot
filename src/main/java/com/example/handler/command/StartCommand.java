package com.example.handler.command;

import com.example.MyTelegramBot;
import com.example.service.UserService;
import com.example.utils.KeyboardUtils;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.User;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Slf4j
@Service
@RequiredArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class StartCommand implements Command {

    MyTelegramBot bot;
    UserService userService;

    @Override
    public void apply(Update update) {
        try {
            Message message = update.getMessage(); // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Long chatId = message.getChatId(); // ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
            User telegramUser = message.getFrom(); // –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
            String commandText = message.getText(); // –¢–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: "/start ref_123"

            logCommand(update.getUpdateId(), telegramUser); // –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∞–∫—Ç –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã
            processUserRegistration(telegramUser, commandText); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ
            deleteOriginalMessage(chatId, message.getMessageId()); // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            sendWelcomeMessage(chatId); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start", e); // –õ–æ–≥–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
        }
    }

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã —Å –∏–Ω—Ñ–æ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    private void logCommand(Integer updateId, User user) {
        log.info("[{}] –ö–æ–º–∞–Ω–¥–∞ {} –æ—Ç {} [id={}]", updateId, getType(), user.getUserName(), user.getId());
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—á—ë—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    private void processUserRegistration(User user, String commandText) {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            if (userService.existsByTelegramId(user.getId())) {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ ‚Äî –≤—ã—Ö–æ–¥
                log.info(" –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω [id={}]", user.getUserName(), user.getId());
                return;

            }else if (commandText != null && commandText.startsWith("/start")) {
                // –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—Ä–æ–±–µ–ª—É: "/start ref_123"
                String[] parts = commandText.split(" ");
                if (parts.length > 1 && parts[1].startsWith("ref_")) {
                    String refCode = parts[1].substring(4); // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–∞–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
                    userService.registerWithReferral(
                            user.getId(),
                            user.getUserName(),
                            user.getFirstName(),
                            user.getLastName(),
                            refCode
                    );
                    log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É {}", user.getUserName(), refCode);
                    return;
                }
            }

            // –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏ –Ω–µ—Ç ‚Äî –æ–±—ã—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            userService.registerUser(
                    user.getId(),
                    user.getUserName(),
                    user.getFirstName(),
                    user.getLastName()
            );
            log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞", user.getUserName());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", e);
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —Ö–æ—á–µ—Ç, —á—Ç–æ–±—ã –±–æ—Ç "–æ—á–∏—â–∞–ª" —á–∞—Ç)
    private void deleteOriginalMessage(Long chatId, Integer messageId) {
        try {
            bot.execute(new DeleteMessage(chatId.toString(), messageId));
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è", e);
        }
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    private void sendWelcomeMessage(Long chatId) {
        SendMessage welcome = SendMessage.builder()
                .chatId(chatId)
                .text("""
                    Hi! üëã
                    Welcome to Earn Stars!
                    
                    Here you can complete simple tasks and earn stars ‚≠êÔ∏è which can be exchanged for real prizes!
                    
                    Before you start, we advise you to read the instructionsüëÄ
                    Choose an action below üëá
                    """)
                .replyMarkup(KeyboardUtils.buildMenuInlineKeyboard()) // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                .build();

        bot.sendNewMessage(welcome);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ CommandHandler)
    @Override
    public CommandType getType() {
        return CommandType.START;
    }
}